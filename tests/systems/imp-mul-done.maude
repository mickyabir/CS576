load ../../systems/imp.maude

set show advisories off .
set print attribute on .

load ../../rltool.maude

(select IMP-SEMANTICS  .)
(use tool conrew for validity          on IMP-SYNTAX+MUL with FOFORMSIMPLIFY-IMP-IMPL .)
(use tool varunif for varunif          on FVP-NAT .)
(use tool varsat  for unsatisfiability on IMP-SYNTAX .)
(def-term-set (< done | E:Env >) | true .)
(declare-vars (X:Nat) U (Y:Nat) U (S:Nat) U (X':Nat) U (S':Nat) U (MAX:Nat) .)

(add-goal loop : (< while (x <: x,,,) {x = x +: 1 ; x,, = x,, +: x, ;} ~> done
                    | x |-> X  *  x, |-> Y * x,, |-> S  * x,,, |-> MAX >) | (X <= MAX) = (true) /\ (S) = (X * Y) =>
                 (< done
		    | x |-> X' *  x, |-> Y * x,, |-> S' * x,,, |-> MAX >) | (X') = (MAX) /\ (S') = (MAX * Y) .) 
(start-proof .)

(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(auto .)
(case 220 on &21:Nat by (0) U (P:NzNat) .)
(auto .)
(case 229 on &22:NzNat by (1) U (1 + N:Nat) .)
(case 230 on &22:NzNat by (1) U (1 + N:Nat) .)
(auto .)
(auto .)
--- quit
